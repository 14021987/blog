<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Tim Churches Health Data Science Blog</title>
    <link>https://timchurches.github.io/blog/</link>
    <atom:link href="https://timchurches.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
    <description>A blog dedicated to noodlings about health data science.
</description>
    <generator>Distill</generator>
    <lastBuildDate>Mon, 17 Feb 2020 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Analysing COVID-19 (2019-nCoV) outbreak data with R - part 1</title>
      <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Churches</dc:creator>
      <link>https://timchurches.github.io/blog/posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1</link>
      <description>


&lt;div class="container-fluid main-container"&gt;




&lt;div class="fluid-row" id="header"&gt;




&lt;/div&gt;


&lt;div id="pre-amble" class="section level1"&gt;
&lt;h1&gt;Pre-amble&lt;/h1&gt;
&lt;p&gt;This article is the first of several that have been distilled from &lt;a href="https://cbdrh.github.io/NovelCoronavirus/on-COVID-19.html"&gt;a much longer document&lt;/a&gt; which started as a late-Friday-afternoon, curiosity-driven exploration of COVID-19 data and the &lt;code&gt;R&lt;/code&gt; tools and packages that might be used to analyse them. Work on that document rapidly expanded to occupy much of the very wet Sydney weekend of 8th &amp;amp; 9th February 2020, with a view to using it as a teaching resource for both UNSW Medicine undergraduate and postgraduate courses – in particular the MSc in Health Data Science offered by the &lt;a href="https://cbdrh.med.unsw.edu.au"&gt;Centre for Big Data Research in Health&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Please note that neither this post nor the parent document have been peer-reviewed, and that I claim no particular expertise in modelling communicable disease outbreaks, although I have been involved in outbreak preparedness work a decade ago, including &lt;a href="https://www.publish.csiro.au/nb/nb09046"&gt;establishing surveillance systems and developing case-contact tracking systems&lt;/a&gt; for the public health response to the 2009 influenza A/H1N1 “swine flu” pandemic while working at the NSW Ministry (previously Department) of Health.&lt;/p&gt;
&lt;p&gt;Please also note that this post &lt;strong&gt;only uses data for Chinese cases up to 15th February 2020&lt;/strong&gt;, and thus it cannot be considered a &lt;strong&gt;situation report&lt;/strong&gt; reflecting the latest available data. The reason for truncating data at 15th February is due to major changes the case definitions used by the authorities in Hubei province from that date forward, which add additional complications to the modelling presented here.&lt;/p&gt;
&lt;p&gt;The full code is available from the GitHub repository linked at the foot of this post.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="the-local-situation" class="section level1"&gt;
&lt;h1&gt;The local situation&lt;/h1&gt;
&lt;p&gt;Since this post is being written in Sydney, New South Wales (NSW), Australia, we’ll start by looking at the work of NSW Health, which is the umbrella name for the various public-sector health services and authorities in NSW. NSW Health has been issuing daily reports on its response to the 2019 novel coronavirus (2019-nCoV, henceforth referred to as COVID-19) outbreak, which look like this:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://timchurches.github.io/blog//posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1/assets/example_NSW_Health_media_release.png" alt="[Figure from a COVID-19 daily media release from NSW Health](https://www.health.nsw.gov.au/news/pages/2020-nsw-health.aspx)" width="95%" style="background-color: #9ecff7; padding:2px; display: inline-block;" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-1)&lt;a href="https://www.health.nsw.gov.au/news/pages/2020-nsw-health.aspx"&gt;Figure from a COVID-19 daily media release from NSW Health&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So let’s collect the data from each of these media releases and visualise it as a time-series.&lt;a href="#fn1" class="footnote-ref" id="fnref1"&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Automated web-scraping was not used for these data because only a few data items need to be abstracted from each report, and the format of the daily reports evolved quite a lot – sometimes it is easier to just capture the required data manually.&lt;/p&gt;
&lt;p&gt;We can do a bit of value-adding to the data by calculating daily counts of people screened, tested and cleared from the cumulative totals given in the NSW Health media releases, and merely presenting the data as time-series reveals information not obvious from the individual daily reports.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/nsw_graph-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;The ensemble of time-series charts clearly show that the NSW public health control efforts, including intensive airport screening, voluntary isolation and, of course, travel restrictions&lt;a href="#fn2" class="footnote-ref" id="fnref2"&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;, are working.&lt;/p&gt;
&lt;p&gt;Having been involved in the public health response to 2009 A/H1N1 swine flu pandemic, I know how much round-the-clock work is involved in mounting such a response. NSW Health should be praised for its efforts, which deserve a more informative presentation than the little table in the daily press release as shown above!&lt;/p&gt;
&lt;p&gt;This admittedly parochial example is provided to illustrate the potential value of providing even simple visualisations and modest value-added analyses (such as merely differencing cumulative counts to yield daily counts) – tasks that that health authorities personnel may not have the capacity to do themselves while simultaneously dealing with an epidemic.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="modelling-the-covid-19-epidemic-in-china" class="section level1"&gt;
&lt;h1&gt;Modelling the COVID-19 epidemic in China&lt;/h1&gt;
&lt;p&gt;On 4th February &lt;a href="https://blog.ephorie.de/epidemiology-how-contagious-is-novel-coronavirus-2019-ncov"&gt;this blog post&lt;/a&gt; by blogger &lt;em&gt;Learning Machines&lt;/em&gt; was featured on &lt;a href="https://www.r-bloggers.com"&gt;R-bloggers&lt;/a&gt;. It very nicely sets out how to use &lt;code&gt;R&lt;/code&gt; to solve the three simultaneous differential equations which describe the classic SIR (Susceptible-Infectious-Recovered) compartmental model of communicable disease outbreaks (see &lt;a href="https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"&gt;this wikipedia page&lt;/a&gt; for an more thorough treatment of compartmental models), and the use one of the optimisers in base &lt;code&gt;R&lt;/code&gt; to fit that SIR model to the observed COVID-19 incidence data by minimising the residual sum of squares. This lets us estimate the basic reproduction number &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; and be able to make (possibly naïve) predictions about the epidemic. The blog post used data for all of China, but given that Wuhan and other cities in Hubei province have effectively been partitioned from the rest of China since about 24th January, it makes sense to model the situation in Hubei only, so we’ll repeat the oh-so-elegant model fitting process here. But first we need some data, and of course we need to do an initial exploratory data analysis before we fit any models!&lt;/p&gt;
&lt;div id="obtaining-data" class="section level2"&gt;
&lt;h2&gt;Obtaining data&lt;/h2&gt;
&lt;p&gt;Naturally we want our analysis to be reproducible, and that means avoiding all manual abstracting and transcribing of data (um, like the manual abstracting and transcribing of NSW Health data that I just did above…). Thus we will programmatically acquire the relevant data from the web – we want to be able to just re-run the program code and have analyses automatically update themselves. There are now many potential sources, but when I first started working on this analysis on 8th February, there were very few accessible, detailed and up-to-date sources of machine-readable data for COVID-19 incidence in China. &lt;a href="https://en.wikipedia.org/wiki/Timeline_of_the_2019–20_Wuhan_coronavirus_outbreak"&gt;This wikipedia page&lt;/a&gt;, which is currently being updated very promptly as new data is released, is a detailed and well-referenced source, and, being wikipedia, it is also versioned, and editable (indeed, I had to make a few edits to the tables on the wikipedia page we are scraping in order to make table parsing easier and more reliable). So, with (quite) a few lines of code, we can download and scrape the data contained in the relevant tables on that page that give counts of laboratory-confirmed cases, and deaths in confirmed cases, by day and by province, clean it up and have it ready to use in our analysis. Note that counts of clinically-confirmed cases (by lung CT) that were being reported by Hubei province for a while are not used in this analysis, so we will remove them from the data we acquire.&lt;/p&gt;
&lt;p&gt;The alternative is laboriously visiting many different web sites and abstracting the data from text such as this:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://timchurches.github.io/blog//posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1/assets/Hubei_Health_Commission_page.png" alt="[Figure from Health Commission of Hubei](http://www.hubei.gov.cn/zhuanti/2020/gzxxgzbd/zxtb/)" width="95%" /&gt;
&lt;p class="caption"&gt;
(#fig:unnamed-chunk-2)&lt;a href="http://www.hubei.gov.cn/zhuanti/2020/gzxxgzbd/zxtb/"&gt;Figure from Health Commission of Hubei&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here is the code used to acquire data from wikipedia. Notice that the code references a specific version of the relevant wikipedia page.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# download the wikipedia web page we use a specific version
# of the template page directly version of the wikipedia page
# that is used by this version of this document
wikipedia_data_url &amp;lt;- paste(&amp;quot;https://en.wikipedia.org/w/index.php?title=Template:&amp;quot;, 
    &amp;quot;2019–20_Wuhan_coronavirus_data/&amp;quot;, &amp;quot;China_medical_cases_by_province&amp;amp;oldid=941235662&amp;quot;, 
    sep = &amp;quot;&amp;quot;)

outbreak_webpage &amp;lt;- read_html(wikipedia_data_url)

# parse the web page and extract the data from the first
# table
provinces_confirmed &amp;lt;- outbreak_webpage %&amp;gt;% html_nodes(&amp;quot;table&amp;quot;) %&amp;gt;% 
    .[[1]] %&amp;gt;% html_table(fill = TRUE) %&amp;gt;% rename(Date = &amp;quot;Date (CST)&amp;quot;)

# fix up the column names, get rid of footnotes and other
# non-data and convert columns to appropriate data types.
excl_hubei &amp;lt;- provinces_confirmed %&amp;gt;% select(starts_with(&amp;quot;ExcludingHubei&amp;quot;)) %&amp;gt;% 
    pull(1)

hubei_sans_wuhan &amp;lt;- provinces_confirmed %&amp;gt;% select(starts_with(&amp;quot;Hubei:&amp;quot;)) %&amp;gt;% 
    select(-contains(&amp;quot;clinical&amp;quot;, ignore.case = TRUE)) %&amp;gt;% pull(1)

# utility function to remove commas in numbers as character
# strings
rm_commas &amp;lt;- function(x) gsub(&amp;quot;,&amp;quot;, &amp;quot;&amp;quot;, x)

provinces_confirmed &amp;lt;- provinces_confirmed %&amp;gt;% select(-starts_with(&amp;quot;ExcludingHubei&amp;quot;)) %&amp;gt;% 
    select(-starts_with(&amp;quot;Hubei:&amp;quot;)) %&amp;gt;% rename(Wuhan = &amp;quot;Wuhan,Hubei&amp;quot;, 
    National = &amp;quot;National(confirmed)&amp;quot;) %&amp;gt;% mutate(NationalSansHubei = excl_hubei, 
    HubeiSansWuhan = hubei_sans_wuhan, Date = ymd(Date), National = stringr::str_split(National, 
        &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 1], Hubei = stringr::str_split(Hubei, 
        &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 1], Wuhan = stringr::str_split(Wuhan, 
        &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 1]) %&amp;gt;% select(-contains(&amp;quot;clinical&amp;quot;, 
    ignore.case = TRUE)) %&amp;gt;% select(-contains(&amp;quot;inclusive&amp;quot;, ignore.case = TRUE)) %&amp;gt;% 
    filter(!is.na(Date)) %&amp;gt;% mutate_if(is.character, rm_commas) %&amp;gt;% 
    mutate_if(is.character, as.integer)

# work out the order for the columns from the data,
# descending order
province_order &amp;lt;- provinces_confirmed %&amp;gt;% pivot_longer(-Date, 
    names_to = &amp;quot;province&amp;quot;, values_to = &amp;quot;incident_cases&amp;quot;) %&amp;gt;% 
    group_by(province) %&amp;gt;% summarise(total = sum(incident_cases, 
    na.rm = TRUE)) %&amp;gt;% arrange(desc(total)) %&amp;gt;% pull(province)

# re-arrange the columns in the dataset and fill in some
# missing values, but not all, with zeroes.  Also,
# lab-confirmed and clinical counts for Wuhan are combined on
# the source Hubei health Commission from 15 Feb so set to NA
# since we cannot split out the lab-confirmed only
provinces_confirmed &amp;lt;- provinces_confirmed %&amp;gt;% select(c(&amp;quot;Date&amp;quot;, 
    province_order)) %&amp;gt;% arrange(Date) %&amp;gt;% mutate(National = ifelse(is.na(National), 
    0, National), Hubei = ifelse(is.na(Hubei), 0, Hubei), Wuhan = ifelse(is.na(Wuhan), 
    0, Wuhan)) %&amp;gt;% mutate(Wuhan = ifelse(Date &amp;gt;= ymd(&amp;quot;2020-02-15&amp;quot;), 
    NA, Wuhan), HubeiSansWuhan = ifelse(Date &amp;gt;= ymd(&amp;quot;2020-02-15&amp;quot;), 
    NA, HubeiSansWuhan))

# repeat for deaths parse the web page and extract the data
# from the second table
provinces_deaths &amp;lt;- outbreak_webpage %&amp;gt;% html_nodes(&amp;quot;table&amp;quot;) %&amp;gt;% 
    .[[2]] %&amp;gt;% html_table(fill = TRUE) %&amp;gt;% rename(Date = &amp;quot;Date (CST)&amp;quot;)

# fix up the column names, get rid of footnotes and other
# non-data and convert columns to appropriate data types.
hubei_sans_wuhan &amp;lt;- provinces_deaths %&amp;gt;% select(starts_with(&amp;quot;Hubei:&amp;quot;)) %&amp;gt;% 
    select(-contains(&amp;quot;clinical&amp;quot;, ignore.case = TRUE)) %&amp;gt;% pull(1)

provinces_deaths &amp;lt;- provinces_deaths %&amp;gt;% select(-starts_with(&amp;quot;Hubei:&amp;quot;)) %&amp;gt;% 
    rename(Wuhan = &amp;quot;Wuhan,Hubei&amp;quot;, National = &amp;quot;National(confirmed)&amp;quot;) %&amp;gt;% 
    mutate(HubeiSansWuhan = hubei_sans_wuhan, Date = ymd(Date), 
        National = stringr::str_split(National, &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 
            1], Hubei = stringr::str_split(Hubei, &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 
            1], Wuhan = stringr::str_split(Wuhan, &amp;quot;\\[&amp;quot;, simplify = TRUE)[, 
            1]) %&amp;gt;% select(-contains(&amp;quot;clinical&amp;quot;, ignore.case = TRUE)) %&amp;gt;% 
    select(-contains(&amp;quot;inclusive&amp;quot;, ignore.case = TRUE)) %&amp;gt;% filter(!is.na(Date)) %&amp;gt;% 
    mutate_if(is.character, rm_commas) %&amp;gt;% mutate_if(is.character, 
    as.integer) %&amp;gt;% mutate(NationalSansHubei = National - Hubei)


# work out the order for the columns from the data,
# descending order
province_order_deaths &amp;lt;- provinces_deaths %&amp;gt;% pivot_longer(-Date, 
    names_to = &amp;quot;province&amp;quot;, values_to = &amp;quot;deaths_in_confirmed_cases&amp;quot;) %&amp;gt;% 
    group_by(province) %&amp;gt;% summarise(total = sum(deaths_in_confirmed_cases, 
    na.rm = TRUE)) %&amp;gt;% arrange(desc(total)) %&amp;gt;% pull(province)

# re-arrange the columns in the dataset and fill in some
# missing values, but not all, with zeroes Also,
# lab-confirmed and clinical deaths for Wuhan are combined on
# the source Hubei health Commission from 15 Feb so set to NA
# since we cannot split out the deaths in lab-confirmed cases
# only
provinces_deaths &amp;lt;- provinces_deaths %&amp;gt;% select(c(&amp;quot;Date&amp;quot;, province_order_deaths)) %&amp;gt;% 
    arrange(Date) %&amp;gt;% mutate(National = ifelse(is.na(National), 
    0, National), Hubei = ifelse(is.na(Hubei), 0, Hubei), Wuhan = ifelse(is.na(Wuhan), 
    0, Wuhan)) %&amp;gt;% mutate(Wuhan = ifelse(Date &amp;gt;= ymd(&amp;quot;2020-02-15&amp;quot;), 
    NA, Wuhan), HubeiSansWuhan = ifelse(Date &amp;gt;= ymd(&amp;quot;2020-02-15&amp;quot;), 
    NA, HubeiSansWuhan))

# there are still issues with death counts in lab-confirmed
# after 12th Feb.  in particular the national count is less
# than tha Hubei count.  So we will just truncate the deaths
# at 12th Feb.
provinces_deaths &amp;lt;- provinces_deaths %&amp;gt;% filter(Date &amp;lt;= ymd(&amp;quot;2020-02-12&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, that’s all a bit fiddly, and the code requires constant maintenance as the format of the source tables are changed by wikipedia editors, often in arbitrary ways. In the next section, we will compare the wikipedia source to a widely-used source provided by Johns Hopkins University in the US. Why doesn’t the WHO have a nice API for obtaining all these data, I hear you ask? That’s what humankind deserves. Anyway, in the meantime, thank goodness for wikipedia and its tireless contributors and editors, and thanks to the Johns Hopkins University team maintaining their version of the data. But I can’t help but feel that there ought to be a well-resourced, canonical source for these data, with a nice RESTful API.&lt;/p&gt;
&lt;p&gt;In the interests of brevity, we won’t display the scraped incidence and deaths data in a table here, but doing so would be good practice.&lt;a href="#fn3" class="footnote-ref" id="fnref3"&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id="checking-the-data" class="section level2"&gt;
&lt;h2&gt;Checking the data&lt;/h2&gt;
&lt;p&gt;Wikipedia is &lt;em&gt;crowd-sourced&lt;/em&gt;, and anyone can edit the pages at any time, although incorrect information is usually corrected very rapidly by a community of editors and contributors, at least for active pages of interest. That is certainly the case for the wikipedia pages on COVID-19 incidence and deaths data we are using in this analysis. Nonetheless, it is &lt;strong&gt;always&lt;/strong&gt; a good idea to check sources wherever possible.&lt;/p&gt;
&lt;p&gt;In fact, there is &lt;a href="https://github.com/CSSEGISandData/COVID-19"&gt;another source of similar, collated COVID-19 data&lt;/a&gt;, maintained by Johns Hopkins University Center for Systems Science and Engineering (JHU CCSE) and used as the source for &lt;a href="https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6"&gt;the dashboard&lt;/a&gt; which they provide.&lt;/p&gt;
&lt;p&gt;So let’s download that data and compare it to the data we are scraping from wikipedia. We are using a cached copy of &lt;a href="https://github.com/CSSEGISandData/COVID-19/blob/5a0760fcfee8f698cff0251b6e578385153f396e/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv"&gt;this revision&lt;/a&gt; of the data as it was at 15:18 2002-02-18 AEDT (Australia/Sydney timezone). Note that timezones are taken into account as far as possible: the JHU data is supposed to be the data as at 23:59hrs UTC for each day, whereas the wikipedia data are just described as “Date (CST)“, where CST is presumed to be China Standard Time, which is the same as Beijing time.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;destfile = &amp;quot;./assets/provinces_confirmed_jh.rda&amp;quot;
if (!file.exists(destfile)) {
    provinces_confirmed_jh &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv&amp;quot;) %&amp;gt;% 
        rename(province = &amp;quot;Province/State&amp;quot;, country_region = &amp;quot;Country/Region&amp;quot;) %&amp;gt;% 
        pivot_longer(-c(province, country_region, Lat, Long), 
            names_to = &amp;quot;Date&amp;quot;, values_to = &amp;quot;cumulative_cases&amp;quot;) %&amp;gt;% 
        mutate(Date = as.Date(mdy_hm(paste(Date, &amp;quot;23:59&amp;quot;, tz = &amp;quot;UTC&amp;quot;)), 
            tz = &amp;quot;China/Beijing&amp;quot;)) %&amp;gt;% filter(country_region == 
        &amp;quot;Mainland China&amp;quot;) %&amp;gt;% group_by(province) %&amp;gt;% arrange(province, 
        Date) %&amp;gt;% group_by(province) %&amp;gt;% mutate(incident_cases = c(0, 
        diff(cumulative_cases))) %&amp;gt;% ungroup() %&amp;gt;% select(-c(country_region, 
        Lat, Long, cumulative_cases)) %&amp;gt;% pivot_wider(Date, names_from = province, 
        values_from = incident_cases) %&amp;gt;% rename(InnerMongolia = &amp;quot;Inner Mongolia&amp;quot;) %&amp;gt;% 
        mutate(source = &amp;quot;Johns Hopkins University&amp;quot;)
    save(provinces_confirmed_jh, file = destfile)
} else {
    load(destfile)
}

compare_provinces_confirmed &amp;lt;- provinces_confirmed %&amp;gt;% mutate(source = &amp;quot;wikipedia&amp;quot;) %&amp;gt;% 
    select(c(Date, source, names(provinces_confirmed_jh))) %&amp;gt;% 
    bind_rows(provinces_confirmed_jh) %&amp;gt;% arrange(Date, desc(source)) %&amp;gt;% 
    select(Date, source, everything())

compare_provinces_confirmed_long &amp;lt;- compare_provinces_confirmed %&amp;gt;% 
    filter(Date &amp;lt;= ymd(&amp;quot;2020-02-12&amp;quot;)) %&amp;gt;% pivot_longer(-c(Date, 
    source), names_to = &amp;quot;province&amp;quot;, values_to = &amp;quot;incident_cases&amp;quot;) %&amp;gt;% 
    filter(province %in% c(&amp;quot;Hubei&amp;quot;, &amp;quot;Beijing&amp;quot;, &amp;quot;Guangdong&amp;quot;, &amp;quot;Henan&amp;quot;, 
        &amp;quot;Zhejiang&amp;quot;, &amp;quot;Hunan&amp;quot;, &amp;quot;Anhui&amp;quot;, &amp;quot;Jiangxi&amp;quot;, &amp;quot;Jiangsu&amp;quot;, &amp;quot;Chongqing&amp;quot;, 
        &amp;quot;Shandong&amp;quot;))

compare_provinces_confirmed_long %&amp;gt;% bind_rows(compare_provinces_confirmed_long %&amp;gt;% 
    group_by(Date, source) %&amp;gt;% summarise(incident_cases = sum(incident_cases, 
    na.rm = TRUE)) %&amp;gt;% mutate(province = &amp;quot;Sum all provinces&amp;quot;)) %&amp;gt;% 
    ggplot(aes(x = Date, y = incident_cases, colour = source)) + 
    geom_line() + geom_point() + facet_grid(province ~ ., scale = &amp;quot;free_y&amp;quot;) + 
    labs(y = &amp;quot;Daily incident confirmed cases&amp;quot;, title = &amp;quot;Comparison of wikipedia and Johns Hopkins University\nCOVID-19 daily incidence data up to 12th February, 2020.&amp;quot;, 
        subtitle = &amp;quot;(Note: not all provinces shown here)&amp;quot;, caption = &amp;quot;Sources: Johns Hopkins CSSE Novel coronavirus COVID-19 (2019-nCoV) data repository\nat https://github.com/CSSEGISandData/COVID-19\nwikipedia: https://en.wikipedia.org/wiki/Timeline_of_the_2019–20_Wuhan_coronavirus_outbreak&amp;quot;) + 
    theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/JHU_incidence-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;There is clearly a lag of 1 day between the two sources for many, but not all of the provinces. That isn’t a major concern and won’t change any of our analyses very much. Of much greater concern are the large differences for specific days, for the provinces with substantial numbers of cases. The most egregious difference between the JHU and wikipedia incidence data is for Hubei province on 2nd February 2020, for which the JHU data gives 4024 new cases, and the wikipedia data gives 2103 new cases. Note that that was well before the change in case definition for Hubei province, which occured on 12th February. The relevant source document for Hubei province for 2nd February is &lt;a href="http://wjw.hubei.gov.cn/fbjd/dtyw/202002/t20200203_2018272.shtml"&gt;here&lt;/a&gt;, and using Google Translate on the contents of that page reveals that the wikipedia data are, in fact, correct.&lt;/p&gt;
&lt;p&gt;Let’s check that against another authorative source. Table 2 in the &lt;a href="https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200201-sitrep-12-ncov.pdf?sfvrsn=273c5d35_2"&gt;WHO Sitrep (Situational Report) for 1st February 2020&lt;/a&gt; gives the cumulative count of confirmed COVID-19 cases in Hubei province as 7153. Table 1 in the &lt;a href="https://www.who.int/docs/default-source/coronaviruse/situation-reports/20200202-sitrep-13-ncov-v3.pdf?sfvrsn=195f4010_6"&gt;WHO SitRep for 2nd February 2020&lt;/a&gt; gives the cumulative count of confirmed COVID-19 cases in Hubei province as 9074. The difference is 1921, which is much closer to figure given for the same date by the Hubei provincial government web site of 2103 cases than it is to the corresponding JHU data of 4024 cases. The minor difference between the WHO and the Hubei government site may perhaps be due to differing cut-off times for daily tallies of case counts.&lt;/p&gt;
&lt;p&gt;That’s enough checking for the puposes of this analysis, but it underlines the importance of checking the accuracy of web data sources, even apparently reputable ones.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="exploratory-data-analysis" class="section level2"&gt;
&lt;h2&gt;Exploratory data analysis&lt;/h2&gt;
&lt;p&gt;Every analysis should start with a thorough EDA. The code for all this is just standard &lt;code&gt;tidyverse&lt;/code&gt; fair, and is available in the GitHib repository for this post, via the link at foot of this post.&lt;/p&gt;
&lt;div id="daily-cumulative-incidence" class="section level3"&gt;
&lt;h3&gt;Daily cumulative incidence&lt;/h3&gt;
&lt;p&gt;First, let’s look at the daily cumulative number of incident, lab-confirmed cases for Wuhan city, for Hubei province (which contains Wuhan), for all the other provinces combined, and for all of China.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/cumulative_incidence-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;The initial increases for Wuhan and the balance of Hubei, and for all of China look to be approximately exponential, as is expected for epidemic spread. Let’s plot them on a logarithmic &lt;em&gt;y&lt;/em&gt; axis. We would expect to see a linear increase on a log scale if the epidemic curve is indeed exponential.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/log_cumulative_incidence-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;One could convince oneself that log-linearity is present.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="daily-incremental-incidence" class="section level3"&gt;
&lt;h3&gt;Daily incremental incidence&lt;/h3&gt;
&lt;p&gt;Let’s also look at the daily incremental incidence. This is more informative, and is known in outbreak epidemiological parlance as the &lt;em&gt;epidemic curve&lt;/em&gt;. It is traditionally visualised as a bar chart, which emphasises missing data more than a line chart, even one with points as well. We’ll adhere to epidemiological tradition.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/daily_incidence-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;At the time of writing (17th February), it looks like incidence has plateaued and is now beginning to decline in Wuhan, and that daily incremental incidence is very definitely falling everywhere else in mainland China.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="epidemic-curves-for-all-provinces-plus-wuhan-city" class="section level3"&gt;
&lt;h3&gt;Epidemic curves for all provinces, plus Wuhan city&lt;/h3&gt;
&lt;p&gt;Finally, let’s quickly visualise the epidemic curves for all the provinces (plus Wuhan city).&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/all_provinces_incidence-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;And let’s look at the cumulative incidence, with all provinces on the same scale to put things in perspective.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/all_provinces_cum_incidence-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;It is clear that Wuhan is not only the epicentre of the outbreak, but that it continues to be the main location of new infections.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="daily-cumulative-and-incremental-deaths-in-lab-confirmed-cases" class="section level3"&gt;
&lt;h3&gt;Daily cumulative and incremental deaths in lab-confirmed cases&lt;/h3&gt;
&lt;p&gt;Now let’s look the daily (incremental) number of deaths in lab-confirmed cases for Wuhan city, for Hubei province (which contains Wuhan), for all the other provinces combined, and for all of China.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/cumulative_deaths-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;Let’s also look at the daily incremental deaths in lab-confirmed cases.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/daily_deaths_plot-1.png" width="960" /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id="incidence-and-deaths" class="section level3"&gt;
&lt;h3&gt;Incidence and deaths&lt;/h3&gt;
&lt;p&gt;Finally, let’s also look at the number of daily incremental lab-confirmed incident cases and the daily incremental deaths in lab-confirmed cases, aligned by date.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/daily_case_deaths_plot-1.png" width="960" /&gt;&lt;/p&gt;
&lt;p&gt;Clearly daily counts of deaths are continuing to rise despite the fact that the daily count of new cases is now falling. This is not surprising, given that it takes some time for cases to either recover or to die, and therefore the trend in deaths will necessarily lag behind any trend in daily incidence.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="fitting-an-sir-model-to-the-hubei-province-data" class="section level1"&gt;
&lt;h1&gt;Fitting an SIR model to the Hubei province data&lt;/h1&gt;
&lt;p&gt;On 4 February 2020, data science blogger &lt;em&gt;Learning Machines&lt;/em&gt; posted &lt;a href="https://blog.ephorie.de/epidemiology-how-contagious-is-novel-coronavirus-2019-ncov"&gt;this analysis&lt;/a&gt; of the COVID-19 outbreak, in which he fitted the classic SIR (Susceptible-Infectious-Recovered) model to the incidence data for all of China. His explanation of how to fit this model using &lt;em&gt;R&lt;/em&gt; is so nice, I’ll reproduce it here, with a few tweaks.&lt;/p&gt;
&lt;p&gt;The basic idea behind the SIR model of communicable disease outbreaks is that there are three groups (also called &lt;em&gt;compartments&lt;/em&gt;) of people: those who are healthy but susceptible to the disease &lt;span class="math inline"&gt;\(S\)&lt;/span&gt;, the infectious (and thus, infected) &lt;span class="math inline"&gt;\(I\)&lt;/span&gt; and people who have recovered &lt;span class="math inline"&gt;\(R\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/8/8a/SIR.PNG" alt="Source: wikipedia" /&gt;
&lt;p class="caption"&gt;Source: wikipedia&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;To model the dynamics of the outbreak we need three differential equations, to describe the rates of change in each group, parameterised by &lt;span class="math inline"&gt;\(\beta\)&lt;/span&gt; which controls the transition between &lt;span class="math inline"&gt;\(S\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(I\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(\gamma\)&lt;/span&gt; which controls the transition between &lt;span class="math inline"&gt;\(I\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(R\)&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[\frac{dS}{dt} = - \frac{\beta I S}{N}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[\frac{dI}{dt} = \frac{\beta I S}{N}- \gamma I\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[\frac{dR}{dt} = \gamma I\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The first step is to express these differential equations as an &lt;em&gt;R&lt;/em&gt; function, which is easier than one might think – the expressions in the code are just direct translations of the differential equations, with respect to time &lt;span class="math inline"&gt;\(t\)&lt;/span&gt; of course.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;SIR &amp;lt;- function(time, state, parameters) {
    par &amp;lt;- as.list(c(state, parameters))
    with(par, {
        dS &amp;lt;- -beta * I * S/N
        dI &amp;lt;- beta * I * S/N - gamma * I
        dR &amp;lt;- gamma * I
        list(c(dS, dI, dR))
    })
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To fit the model to the data we need two things: a solver for these differential equations and an optimiser to find the optimal values for our two unknown parameters, &lt;span class="math inline"&gt;\(\beta\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(\gamma\)&lt;/span&gt;. The function &lt;code&gt;ode()&lt;/code&gt; (for &lt;em&gt;ordinary differential equations&lt;/em&gt;) from the &lt;code&gt;deSolve&lt;/code&gt; package for &lt;code&gt;R&lt;/code&gt; makes solving the system of equations easy, and to find the optimal values for the parameters we wish to estimate, we can just use the &lt;code&gt;optim&lt;/code&gt; function built into base &lt;em&gt;R&lt;/em&gt;. Specifically what we need to do is minimise the sum of the squared differences between &lt;span class="math inline"&gt;\(I(t)\)&lt;/span&gt;, which is the number of people in the infectious compartment &lt;span class="math inline"&gt;\(I\)&lt;/span&gt; at time &lt;span class="math inline"&gt;\(t\)&lt;/span&gt;, and the corresponding number of cases as predicted by our model &lt;span class="math inline"&gt;\(\hat{I}(t)\)&lt;/span&gt;. This quantity is known as the &lt;em&gt;residual sum of squares&lt;/em&gt; (RSS)&lt;a href="#fn4" class="footnote-ref" id="fnref4"&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[RSS(\beta, \gamma) = \sum_{t} \left( I(t)-\hat{I}(t) \right)^2\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Rather than fit a model to the incidence data for all of China, let’s fit a model to the incidence data for Hubei province only, given that Hubei contains Wuhan, the city which is the source of the outbreak. Most cities in Hubei have been isolated from the rest of China since 23rd January, so it makes sense to model Hubei separately. We need a value &lt;span class="math inline"&gt;\(N\)&lt;/span&gt; for the initial uninfected population. Once again we’ll scrape population data from a suitable wikipedia page. See the repository for the code.&lt;/p&gt;
&lt;p&gt;The approximate population of Hubei province in 2017 was 59,020,000 people, according to &lt;a href="https://en.wikipedia.org/wiki/List_of_Chinese_administrative_divisions_by_population"&gt;this wikipedia page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, we need to create a vector with the daily cumulative incidence for Hubei, from 15th January when our daily incidence data starts, through to 30th January. We’ll then compare the predicted incidence from the SIR model fitted to these data with the actual incidence since 30th January. We also need to initialise the values for &lt;span class="math inline"&gt;\(S\)&lt;/span&gt;, &lt;span class="math inline"&gt;\(I\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(R\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# put the daily cumulative incidence numbers for Hubei from
# 15th Jan to 30th Jan into a vector called Infected
sir_start_date &amp;lt;- &amp;quot;2020-01-15&amp;quot;

Infected &amp;lt;- cumulative_incidence %&amp;gt;% filter(province == &amp;quot;Hubei&amp;quot;, 
    Date &amp;gt;= ymd(&amp;quot;2020-01-15&amp;quot;), Date &amp;lt;= ymd(&amp;quot;2020-01-30&amp;quot;)) %&amp;gt;% 
    pull(cumulative_incident_cases)

# Create an incrementing Day vector the same length as our
# cases vector
Day &amp;lt;- 1:(length(Infected))

# now specify initial values for S, I and R
init &amp;lt;- c(S = N - Infected[1], I = Infected[1], R = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we need to define a function to calculate the &lt;span class="math inline"&gt;\(RSS\)&lt;/span&gt;, given a set of values for &lt;span class="math inline"&gt;\(\beta\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(\gamma\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# define a function to calculate the residual sum of squares
# (RSS), passing in parameters beta and gamma that are to be
# optimised for the best fit to the incidence data
RSS &amp;lt;- function(parameters) {
    names(parameters) &amp;lt;- c(&amp;quot;beta&amp;quot;, &amp;quot;gamma&amp;quot;)
    out &amp;lt;- ode(y = init, times = Day, func = SIR, parms = parameters)
    fit &amp;lt;- out[, 3]
    sum((Infected - fit)^2)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we can fit the SIR model to our data by finding the values for &lt;span class="math inline"&gt;\(\beta\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(\gamma\)&lt;/span&gt; that minimise the residual sum of squares between the observed cumulative incidence and the predicted cumulative incidence. We also need to check that our model has converged, as indicated by the message shown below:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# now find the values of beta and gamma that give the
# smallest RSS, which represents the best fit to the data.
# Start with values of 0.5 for each, and constrain them to
# the interval 0 to 1.0
Opt &amp;lt;- optim(c(0.5, 0.5), RSS, method = &amp;quot;L-BFGS-B&amp;quot;, lower = c(0, 
    0), upper = c(1, 1))

# check for convergence
Opt$message&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;CONVERGENCE: REL_REDUCTION_OF_F &amp;lt;= FACTR*EPSMCH&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Convergence is confirmed. Now we can examine the fitted values for &lt;span class="math inline"&gt;\(\beta\)&lt;/span&gt; and &lt;span class="math inline"&gt;\(\gamma\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;Opt_par &amp;lt;- setNames(Opt$par, c(&amp;quot;beta&amp;quot;, &amp;quot;gamma&amp;quot;))
Opt_par&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     beta     gamma 
0.6671291 0.3328710 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Those values don’t mean a lot, &lt;em&gt;per se&lt;/em&gt;, but let’s use them to get the fitted numbers of people in each compartment of our SIR model for the dates up to 30th January that were used to fit the model, and compare those fitted values with the observed data.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# time in days for predictions
t &amp;lt;- 1:as.integer(today() - ymd(sir_start_date))
# get the fitted values from our SIR model
fitted_cumulative_incidence &amp;lt;- data.frame(ode(y = init, times = t, 
    func = SIR, parms = Opt_par))
# add a Date column and join the observed incidence data
fitted_cumulative_incidence &amp;lt;- fitted_cumulative_incidence %&amp;gt;% 
    mutate(Date = ymd(sir_start_date) + days(t - 1), province = &amp;quot;Hubei&amp;quot;) %&amp;gt;% 
    left_join(cumulative_incidence %&amp;gt;% ungroup() %&amp;gt;% filter(province == 
        &amp;quot;Hubei&amp;quot;) %&amp;gt;% select(Date, cumulative_incident_cases))

# plot the data
fitted_cumulative_incidence %&amp;gt;% filter(Date &amp;lt;= ymd(&amp;quot;2020-01-30&amp;quot;)) %&amp;gt;% 
    ggplot(aes(x = Date)) + geom_line(aes(y = I), colour = &amp;quot;red&amp;quot;) + 
    geom_point(aes(y = cumulative_incident_cases), colour = &amp;quot;orange&amp;quot;) + 
    labs(y = &amp;quot;Cumulative incidence&amp;quot;, title = &amp;quot;COVID-19 fitted vs observed cumulative incidence, Hubei province&amp;quot;, 
        subtitle = &amp;quot;(red=fitted incidence from SIR model, orange=observed incidence)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/SIR_model_plot_fitted_data-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;That looks like a reasonably good fit to the observed cumulative incidence data, so we can now use our fitted model to calculate the &lt;em&gt;basic reproduction number&lt;/em&gt; &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; which gives the average number of susceptible people who are infected by each infectious person:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[R_{0} = \frac{\beta}{\gamma}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That’s very easy to calculate, and we get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      R0 
2.004167 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; of 2.0 is consistent the values calculated by others for COVID-19, and is also consistent with the &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; for SARS and MERS, which are similar diseases also cause by &lt;em&gt;coronavirus&lt;/em&gt;.&lt;/p&gt;
&lt;div id="using-the-sir-model-for-hubei-province-to-make-predictions" class="section level2"&gt;
&lt;h2&gt;Using the SIR model for Hubei province to make predictions&lt;/h2&gt;
&lt;p&gt;An obvious next step is to use our fitted SIR model to make predictions about the future course of the outbreak. However, caution is required, because the SIR model assumes a fixed &lt;em&gt;reproduction number&lt;/em&gt;, but if public health interventions have been implemented, such as quarantining of cases, contact tracing and isolation of those contacts, and general restrictions on social mixing, such as closing the city of Wuhan, then the &lt;em&gt;effective reproduction number&lt;/em&gt; &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; will be dynamic and should fall as those interventions are progressively implemented, to values considerably less than the &lt;em&gt;basic reproduction number&lt;/em&gt; &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt;, which reflects the behaviour of the virus at the beginning of an epidemic before any response has been implemented.&lt;/p&gt;
&lt;p&gt;So let’s use our SIR model, fitted to the first 15 days of data, to extrapolate out to the current date, and compare that against the observed values:&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/SIR_model_plot_extrapolated-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;We can see that the actual incidence is much lower than that predicted by our model. The reason is that, due to the swift and decisive public health interventions implemented by the Chinese authorities, the &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; of the COVID-19 in Hubei province has already been substantially reduced. When the &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; falls below 1.0, the peak of the epidemic (at least in Hubei) will have been reached and the outbreak will eventually die out.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="using-our-model-to-let-the-outbreak-run-its-course-without-intervention" class="section level2"&gt;
&lt;h2&gt;Using our model to let the outbreak “run its course” without intervention&lt;/h2&gt;
&lt;p&gt;It is instructive to use our model fitted to the first 15 days of available data on lab-confirmed cases in Hubei province, to see what would happen if the outbreak were left to run its course, without public health interventions.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# time in days for predictions
t &amp;lt;- 1:70
# get the fitted values from our SIR model
fitted_cumulative_incidence &amp;lt;- data.frame(ode(y = init, times = t, 
    func = SIR, parms = Opt_par))
# add a Date column and join the observed incidence data
fitted_cumulative_incidence &amp;lt;- fitted_cumulative_incidence %&amp;gt;% 
    mutate(Date = ymd(sir_start_date) + days(t - 1), province = &amp;quot;Hubei&amp;quot;) %&amp;gt;% 
    left_join(cumulative_incidence %&amp;gt;% ungroup() %&amp;gt;% filter(province == 
        &amp;quot;Hubei&amp;quot;) %&amp;gt;% select(Date, cumulative_incident_cases))

# plot the data
fitted_cumulative_incidence %&amp;gt;% ggplot(aes(x = Date)) + geom_line(aes(y = I), 
    colour = &amp;quot;red&amp;quot;) + geom_line(aes(y = S), colour = &amp;quot;black&amp;quot;) + 
    geom_line(aes(y = R), colour = &amp;quot;green&amp;quot;) + geom_point(aes(y = cumulative_incident_cases), 
    colour = &amp;quot;orange&amp;quot;) + scale_y_continuous(labels = scales::comma) + 
    labs(y = &amp;quot;Persons&amp;quot;, title = &amp;quot;COVID-19 fitted vs observed cumulative incidence, Hubei province&amp;quot;) + 
    scale_colour_manual(name = &amp;quot;&amp;quot;, values = c(red = &amp;quot;red&amp;quot;, black = &amp;quot;black&amp;quot;, 
        green = &amp;quot;green&amp;quot;, orange = &amp;quot;orange&amp;quot;), labels = c(&amp;quot;Susceptible&amp;quot;, 
        &amp;quot;Recovered&amp;quot;, &amp;quot;Observed incidence&amp;quot;, &amp;quot;Infectious&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/SIR_model_plot_no_intervention-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;It is easier to see what is going on if we use a log scale:&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/SIR_model_plot_no_intervention_log-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Clearly that prediction, should it come to pass, would be an unmitigated disaster. At this point, it is worth remarking on the importance of decisive public health intervention to limit the spread of such epidemics. Without such interventions, tens of millions of people could be infected, as our model predicts, and even with only a one or two per cent mortality rate, hundreds of thousands of people would die. The economic and human cost of the outbreak control steps taken within China are large, but the alternatives are a lot worse!&lt;/p&gt;
&lt;/div&gt;
&lt;div id="ascertainment-rates" class="section level2"&gt;
&lt;h2&gt;Ascertainment rates&lt;/h2&gt;
&lt;p&gt;So far, we have assumed that the counts of lab-confirmed cases represent all the cases that are infectious. This is unlikely to be true – typically only a proportion of actual cases are detected or found or sent for testing. This proportion is known as the &lt;em&gt;ascertainment rate&lt;/em&gt;. The ascertainment rate is likely to change during the course of an outbreak, particularly if surveillance and screening efforts are increased, or if case definitions are changed. Such changing ascertainment rates can be easily incorporated into our model by using a set of weights, or a weighting function, for our incidence data, but for the sake of simplicity, let’s see what happens if we assume a fixed ascertainment rate of 20%&lt;a href="#fn5" class="footnote-ref" id="fnref5"&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;. If we apply that, thus inflating the number of incident cases by a factor of 5, and refit our model, we get the following results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;CONVERGENCE: REL_REDUCTION_OF_F &amp;lt;= FACTR*EPSMCH&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     beta     gamma 
0.6671730 0.3328275 &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      R0 
2.004561 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that these fitted parameters are the same as the ones we got above, without an ascertainment rate adjustment. Let’s look at the fitted values.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/SIR_model_plot_no_intervention_ascertainment_adjustment-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Perhaps counter-intuitively, incorporation of a fixed 20% ascertainment rate adjustment into our model makes little difference to the modelled outbreak if it is let run its course, except that it all happens a bit more quickly. But the number of infections remains the same, and the &lt;em&gt;basic reproduction number&lt;/em&gt; is unchanged. Note that that is for a fixed ascertainment rate. If the ascertainment rate varies significantly over time, then the parameter estimates will necessarily be biased – but in the early days of an outbreak, it may be reasonable to assume that ascertainment rates don’t change too much.&lt;/p&gt;
&lt;div id="more-sophisticated-models" class="section level3"&gt;
&lt;h3&gt;More sophisticated models&lt;/h3&gt;
&lt;p&gt;We can also fit more sophisticated models which may better reflect real-life transmission processes. The SEIR model is widely used. As before, &lt;strong&gt;S&lt;/strong&gt; stands for &lt;strong&gt;Susceptible&lt;/strong&gt;, but &lt;strong&gt;E&lt;/strong&gt; stand for &lt;strong&gt;Exposed/infected but asymptomatic&lt;/strong&gt;, &lt;strong&gt;I&lt;/strong&gt; stands for &lt;strong&gt;Infected and symptomatic&lt;/strong&gt;, and &lt;strong&gt;R&lt;/strong&gt; stands for &lt;strong&gt;Recovered&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In a closed population (that is, assuming no births or deaths), the SEIR model is:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[
\begin{aligned}
\frac{dS}{dt} &amp;amp; = -\frac{\beta IS}{N}\\
\\
\frac{dE}{dt} &amp;amp; = \frac{\beta IS}{N} - \kappa E\\
\\
\frac{dI}{dt} &amp;amp; = \kappa E - \gamma I\\
\\
\frac{dR}{dt} &amp;amp; = \gamma I
\end{aligned}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Fitting this model to the observed data is left as an exercise for the reader. Note however, that these are &lt;em&gt;continuous-time&lt;/em&gt; dynamic models that assume fixed transition rates. There are other, stochastic models that use micro-simulation of individuals and allow for varying transition rates depending on attributes of individuals, social networking and so on. We will explore the utilty of such models in a later post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="modelling-the-epidemic-trajectory-using-log-linear-models" class="section level1"&gt;
&lt;h1&gt;Modelling the epidemic trajectory using log-linear models&lt;/h1&gt;
&lt;p&gt;As noted above, the initial exponential phase of an outbreak, when shown in a semi-log plot (the y-axis with a logarithmic transform), appears (somewhat) linear. This suggests that we can model epidemic growth, and decay, using a simple log-linear model of the form:&lt;/p&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[log(y) = rt + b\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class="math inline"&gt;\(y\)&lt;/span&gt; is the incidence, &lt;span class="math inline"&gt;\(r\)&lt;/span&gt; is the growth rate, &lt;span class="math inline"&gt;\(t\)&lt;/span&gt; is the number of days since a specific point in time (typically the start of the outbreak), and &lt;span class="math inline"&gt;\(b\)&lt;/span&gt; is the intercept. Separate models are fitted to the growth and the decay parts of the epidemic (incidence data) curve.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;incidence&lt;/code&gt; package for R, part of the excellent &lt;a href="https://www.repidemicsconsortium.org"&gt;&lt;strong&gt;R&lt;/strong&gt; &lt;strong&gt;E&lt;/strong&gt;pidemics &lt;strong&gt;Con&lt;/strong&gt;sortium (&lt;strong&gt;RECON&lt;/strong&gt;) suite&lt;/a&gt; of packages for epidemic modelling and control, makes the fitting of such models very convenient (although it is not difficult using base R capabilities). We’ll use that package to fit such a model. We need to convert daily case counts back into one case per row format first. The &lt;code&gt;uncount()&lt;/code&gt; function the the &lt;code&gt;tidyr&lt;/code&gt; package is perfect for doing that.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# create a vector of dates, in character form, one for each
# case in Hubei province on each date using the uncount()
# function.
hubei_incidence_function_data &amp;lt;- provinces_confirmed %&amp;gt;% filter(Date &amp;gt;= 
    ymd(&amp;quot;2020-01-11&amp;quot;)) %&amp;gt;% mutate(HubeiSansWuhan = ifelse(is.na(HubeiSansWuhan), 
    0, HubeiSansWuhan)) %&amp;gt;% mutate(incident_cases = ifelse(Date &amp;lt; 
    ymd(&amp;quot;2020-02-15&amp;quot;), Wuhan + HubeiSansWuhan, Hubei)) %&amp;gt;% mutate(Date = format(Date, 
    &amp;quot;%Y-%m-%d&amp;quot;)) %&amp;gt;% select(Date, incident_cases) %&amp;gt;% uncount(incident_cases)

hubei_incidence_object &amp;lt;- incidence(hubei_incidence_function_data$Date)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can then find the date of peak incidence and indicate that on a plot of the daily incidence data. The &lt;code&gt;find_peak()&lt;/code&gt; function in the &lt;code&gt;incidence&lt;/code&gt; library does that for us (but it is also easy to do by eye or with some simple code, and there is also a more sophisticated peak detection function provided in the &lt;code&gt;incidence&lt;/code&gt; library, but its use is unnecessary here.).&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;hubei_incidence_peak &amp;lt;- find_peak(hubei_incidence_object)

plot(hubei_incidence_object) + geom_vline(xintercept = hubei_incidence_peak, 
    col = &amp;quot;red&amp;quot;, lty = 2) + labs(title = &amp;quot;Daily incidence of lab-confirmed cases, Hubei province&amp;quot;, 
    subtitle = &amp;quot;(red line indicates date of peak incidence)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/plot_incidence_object-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Now we can use the &lt;code&gt;fit()&lt;/code&gt; function to fit two log-linear models, one to the growth phase before the peak, and one to the decay phase after the peak. We can plot the fitted values from our models (with confidence limits) on top of the actual observed incidence data for Hubei province.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;hubei_incidence_fit &amp;lt;- incidence::fit(hubei_incidence_object, 
    split = hubei_incidence_peak)

# plot the incidence data and the model fit
plot(hubei_incidence_object) %&amp;gt;% add_incidence_fit(hubei_incidence_fit) + 
    labs(title = &amp;quot;Observed and modelled incidence of COVID-19 cases&amp;quot;, 
        subtitle = &amp;quot;Hubei province, 2020&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/fit_incidence_object-1.png" width="672" data-distill-preview=1 /&gt;&lt;/p&gt;
&lt;p&gt;From the model, we can extract various parameters of interest: the &lt;strong&gt;growth rate prior to the peak was 0.26&lt;/strong&gt; (95% CI 0.21 - 0.31), and the &lt;strong&gt;decay rate after the peak was -0.095&lt;/strong&gt; (95% CI -0.0695 - -0.121).&lt;/p&gt;
&lt;p&gt;These growth and decay rates are equivalent to a &lt;strong&gt;doubling time of 2.7 days&lt;/strong&gt; (95% CI 2.2 - 3.3 days), and a &lt;strong&gt;halving time of 7.3 days&lt;/strong&gt; (95% CI 5.7 - 10.0 days).&lt;/p&gt;
&lt;p&gt;The doubling and halving time estimates are very handy for informing public health intervention policy, which we will discuss in the conclusion.&lt;/p&gt;
&lt;div id="estimating-the-reproduction-number-from-log-linear-models" class="section level2"&gt;
&lt;h2&gt;Estimating the reproduction number from log-linear models&lt;/h2&gt;
&lt;p&gt;We can also use these log-linear models of the epidemic trajectory to estimate the reproduction number in the growth and decay phases of the epidemic. We need to provide a distribution for the &lt;em&gt;serial interval&lt;/em&gt; time, which is the time between the onset of a primary case and the time of onset in its secondary cases. We’ll use a mean of 7.5 days and a standard deviation of 3.4 days to parameterise a discrete gamma distribution for the serial interval. See the discussion in next section of &lt;em&gt;serial intervals&lt;/em&gt; for justification of these values. The &lt;code&gt;distcrete&lt;/code&gt; and &lt;code&gt;epitrix&lt;/code&gt; libraries from the &lt;strong&gt;RECON&lt;/strong&gt; suite of tools are needed to carry out the calculations. Here is a histogram of our calculated distribution of possible values for &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; for the growth phase, based on the log-linear model we fitted to the Hubei incidence data:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;mu &amp;lt;- 7.5  # days
sigma &amp;lt;- 3.4  # days
param &amp;lt;- gamma_mucv2shapescale(mu, sigma/mu)

w &amp;lt;- distcrete(&amp;quot;gamma&amp;quot;, interval = 1, shape = param$shape, scale = param$scale, 
    w = 0)

growth_R0 &amp;lt;- lm2R0_sample(hubei_incidence_fit$before$model, w)
hist(growth_R0, col = &amp;quot;grey&amp;quot;, border = &amp;quot;white&amp;quot;, main = &amp;quot;Distribution of R0&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/est_R0_growth-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;summary(growth_R0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  3.319   4.115   4.476   4.512   4.791   8.057 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the central estimates for &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; are considerably higher than those we calculated with a SIR model fitted to the same Hubei province data, and are also higher than &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; estimates published elsewhere, but they are consistent with estimates of the instantaneous effective reproduction number &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; which we calculate in the next section&lt;a href="#fn6" class="footnote-ref" id="fnref6"&gt;&lt;sup&gt;6&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is the estimated &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; for the decay phase:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;decay_R0 &amp;lt;- lm2R0_sample(hubei_incidence_fit$after$model, w)
hist(decay_R0, col = &amp;quot;grey&amp;quot;, border = &amp;quot;white&amp;quot;, main = &amp;quot;Distribution of R0&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/est_R0_decay-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;summary(decay_R0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.3555  0.4504  0.4793  0.4808  0.5069  0.5991 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unsurprisingly, it is well below 1.0 – otherwise the epidemic would not be decaying, as we observe.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="estimating-changes-in-the-effective-reproduction-number" class="section level1"&gt;
&lt;h1&gt;Estimating changes in the &lt;em&gt;effective reproduction number&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;Given the above, it would be useful to estimate the current &lt;em&gt;effective reproduction number&lt;/em&gt; &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; on a day-by-day basis so as to track the effectiveness of public health interventions, and possibly predict at the earliest opportunity when an outbreak will turn the corner. Is that possible?&lt;/p&gt;
&lt;p&gt;In fact, there are several available methods for estimating &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; – exploring all of those is beyond the scope of this post. Instead, we will focus on one method, developed in 2013 by Anne Cori and colleagues at Imperial College, London, which permits estimation of the &lt;em&gt;instantaneous effective reproduction number&lt;/em&gt;, which is exactly want we want in order to track the effectiveness of containment efforts. Full details are available in the &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3816335/"&gt;original paper&lt;/a&gt; on the method, with extensions described in a later paper by &lt;a href="https://doi.org/10.1016/j.epidem.2019.100356"&gt;Thompson &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;. We’ll use the &lt;code&gt;EpiEstim&lt;/code&gt; package for &lt;em&gt;R&lt;/em&gt;, which implements this method, with recent extensions to permit modelling of imported cases as well as local transmission. “Imported” my be from other species, and/or due to inbound human travel from other geographical regions.&lt;/p&gt;
&lt;p&gt;Once again, we’ll start with the counts of lab-confirmed cases from in Hubei province and Wuhan city from 11th January 2020 onwards. We’ll treat the initial 41 cases as “imported”, possibly from a different species at the Wuhan fish markets. In fact, that assumption makes little difference to the estimates.&lt;/p&gt;
&lt;p&gt;A critical parameter for the Cori model is the &lt;em&gt;serial interval&lt;/em&gt; (SI). The SI is the time between onset of symptoms of each case of the disease in question, and the onset of symptoms in any secondary cases that result from transmission from the primary cases. In other words, it is the time between cases in the (branching) chain of transmission of the disease. A moment’s reflection reveals that the SI is, in fact, a statistical distribution of serial interval times, rather than a fixed value. That distribution can be simulated, typically using a discrete &lt;em&gt;gamma&lt;/em&gt; distribution with a given mean and standard deviation.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;estimate_R()&lt;/code&gt; function in the &lt;code&gt;EpiEstim&lt;/code&gt; package allows the SI distribution to be specified parametrically. It also allows uncertainty to be incorporated into the parameterisation of this distribution, and it even allows the SI distribution to be estimated empirically, using Bayesian methods, from individual line-listings of cases. We’ll examine all of those capabilities.&lt;/p&gt;
&lt;p&gt;At the time of writing, I was able to find only one published estimate of the &lt;em&gt;serial interval&lt;/em&gt; distribution, derived from analysis of just 5 primary cases amongst the first 450 cases in Wuhan, published by &lt;a href="https://www.nejm.org/doi/full/10.1056/NEJMoa2001316"&gt;Li &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;. They estimate the serial interval distribution to have a mean of 7.5 days with a standard deviation of 3.4 days. This is almost identical to the &lt;em&gt;serial interval&lt;/em&gt; parameters for the MERS virus, which were a mean of 7.6 and a SD of 3.4. This similarity is not surprising given that both pathogens are &lt;em&gt;coronavirii&lt;/em&gt;. Let’s use that to estimate the instantaneous &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; for Hubei province.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# custom results plotting function to avoid the ugly
# TableGrob messages returned by the plotting function in the
# EpiEstim package
plot_Ri &amp;lt;- function(estimate_R_obj) {
    p_I &amp;lt;- plot(estimate_R_obj, &amp;quot;incid&amp;quot;, add_imported_cases = TRUE)  # plots the incidence
    p_SI &amp;lt;- plot(estimate_R_obj, &amp;quot;SI&amp;quot;)  # plots the serial interval distribution
    p_Ri &amp;lt;- plot(estimate_R_obj, &amp;quot;R&amp;quot;)
    return(gridExtra::grid.arrange(p_I, p_SI, p_Ri, ncol = 1))
}

hubei_res_parametric_si &amp;lt;- estimate_R(hubei_confirmed_cases, 
    method = &amp;quot;parametric_si&amp;quot;, config = make_config(list(mean_si = 7.5, 
        std_si = 3.4)))

plot_Ri(hubei_res_parametric_si)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_parametric_si_model_fit_hubei-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;The first thing to note is that the slope of the &lt;em&gt;effective reproduction number&lt;/em&gt; curve is decidedly downwards, which strongly suggests that containment efforts are succeeding in progressively reducing transmission of the disease in Hubei province. That is encouraging.&lt;/p&gt;
&lt;p&gt;The second thing to note is that the 7-day sliding window estimates of &lt;strong&gt;instantaneous&lt;/strong&gt; &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; are very high, approaching 10 at the peak. This seems unlikely. It is possible that the Cori model or its implementation as an &lt;code&gt;R&lt;/code&gt; library is flawed, but it has been developed and implemented by the pre-eminent epidemic modelling team in the world, and has been shown to accurately estimate &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; using a wide range of historical outbreak data. There are, however, a number of possible alternative explanations.&lt;/p&gt;
&lt;p&gt;One possible explanation is that COVID-19 is transmissible &lt;strong&gt;before&lt;/strong&gt; the onset of symptoms, resulting in much shorter serial intervals than expected, possibly shorter than the incubation period. Alternatively, and very likely, there may be non-symptomatic, sub-clinical spreaders of the disease, who are undetected. Again, the effect is as if the serial interval is very short, although it would be desirable to explicitly model that scenario, but current methods don’t permit that.&lt;/p&gt;
&lt;p&gt;Either way, if we re-calculate, but using a mean of just 2.3 days for the SI distribution, and an SD of 1.4, we get these estimates:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;hubei_res_parametric_si &amp;lt;- estimate_R(hubei_confirmed_cases, 
    method = &amp;quot;parametric_si&amp;quot;, config = make_config(list(mean_si = 2.3, 
        std_si = 1.4)))

plot_Ri(hubei_res_parametric_si)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_parametric_si_model_fit2_hubei-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Those estimated &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; values look far more reasonable, and if true, suggest that the epidemic will soon be brought under control, at least in Hubei, which is its epicentre.&lt;/p&gt;
&lt;p&gt;However, arbitrarily making the serial interval very short feels wrong. Another possible explanation is that there may be a great deal of variation in the serial interval distribution between cases, for the reasons noted above, with some cases transmitting the disease very soon after infection, possibly before the onset of symptoms (so-called &lt;em&gt;super-spreaders&lt;/em&gt;), and some cases being sub-clinical, and thus undetected, spreading the disease as well, while other cases have a serial interval more consistent with that of MERS or SARS, with a mean around 8 days. Such variability in the serial interval distributions between cases is consistent with the observed variation between individuals in the severity of the disease caused by COVID-19 – most victims develop only mild disease, a small proportion develop serious disease, and only one or two per cent die from the infection.&lt;/p&gt;
&lt;p&gt;Conveniently, the &lt;code&gt;EpiEstim&lt;/code&gt; package lets us incorporate this uncertainty around the serial interval distribution by allowing specification of a distribution of distributions of serial intervals. So let’s retain the mean SI estimated by Li &lt;em&gt;et al.&lt;/em&gt; of 7.5 days, with an SD of 3.4, but let’s also allow that mean SI to vary between 2.3 and 8.4 using a truncated normal distribution with an SD of 2.0. We’ll also allow the SD or the SD to vary between 0.5 and 4.0.&lt;/p&gt;
&lt;p&gt;Recalculating with those SI distribution parameters and meta-parameters, we get these results:&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;hubei_res_uncertain_si &amp;lt;- estimate_R(hubei_confirmed_cases, method = &amp;quot;uncertain_si&amp;quot;, 
    config = make_config(list(mean_si = 7.5, std_mean_si = 2, 
        min_mean_si = 1, max_mean_si = 8.4, std_si = 3.4, std_std_si = 1, 
        min_std_si = 0.5, max_std_si = 4, n1 = 1000, n2 = 1000)))

plot_Ri(hubei_res_uncertain_si)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_uncertain_si_model_fit_hubei-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Ok, that looks more reasonable, and clearly the &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; is falling in Hubei, no matter what distribution we use for the serial interval.&lt;/p&gt;
&lt;p&gt;But, leaving no stone unturned, the methods provided in the excellent &lt;em&gt;EpiEstim&lt;/em&gt; package also permit &lt;em&gt;empirical&lt;/em&gt; estimation of the &lt;em&gt;serial interval&lt;/em&gt; based on pair data – that is, unit records of pairs of primary and secondary cases. &lt;a href="https://www.nejm.org/doi/full/10.1056/NEJMoa2001316"&gt;Li &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt; provides such data for just 5 primary cases from the early stages of the outbreak in Wuhan:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://timchurches.github.io/blog//posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1/assets/Li_et_al_fig3.png" alt="Figure 3 from Li et al." /&gt;
&lt;p class="caption"&gt;Figure 3 from Li et al.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Notice in particular that the secondary cases in cluster 4 have &lt;strong&gt;very short&lt;/strong&gt; serial intervals, which supports the meta-distribution we explored above (albeit, that set of short intervals is for only one primary case, but that is the only serial interval currently available, it seems!).&lt;/p&gt;
&lt;p&gt;Let’s use those serial interval data to re-estimate &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt;. Bayesian methods are used, and the trace output below is from the MCMC (Markov-chain Monte Carlo) resampling methods used.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;SL = c(5, 9, 7, 3, 7, 8, 1, 3, 7, 9, 12)

si_data_wuhan_Li &amp;lt;- data.frame(EL = as.integer(rep(0, 11)), ER = as.integer(rep(1, 
    11)), SL = as.integer(SL), SR = as.integer(SL + 1))

## fixing the random seeds
MCMC_seed &amp;lt;- 1
overall_seed &amp;lt;- 2
mcmc_control &amp;lt;- make_mcmc_control(seed = MCMC_seed, burnin = 1000)
dist &amp;lt;- &amp;quot;G&amp;quot;  # fitting a Gamma distribution for the SI
empirical_si_config &amp;lt;- make_config(list(si_parametric_distr = dist, 
    mcmc_control = mcmc_control, seed = overall_seed, n1 = 50, 
    n2 = 50))
hubei_res_empirical_si &amp;lt;- estimate_R(hubei_confirmed_cases, method = &amp;quot;si_from_data&amp;quot;, 
    si_data = si_data_wuhan_Li, config = empirical_si_config)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Running 1500 MCMC iterations 
MCMCmetrop1R iteration 1 of 1500 
function value =  -30.27974
theta = 
   1.40008
   0.46471
Metropolis acceptance rate = 0.00000

MCMCmetrop1R iteration 1001 of 1500 
function value =  -31.54334
theta = 
   0.52339
   1.20517
Metropolis acceptance rate = 0.55844



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
The Metropolis acceptance rate was 0.56400
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
Estimating the reproduction number for these serial interval estimates...
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_Ri(hubei_res_empirical_si)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_empirical_si_model_fit_hubei_daily-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;That is remarkably similar to our estimates based on an “uncertain” meta-distribution for the &lt;em&gt;serial interval&lt;/em&gt;, above, which is encouraging.&lt;/p&gt;
&lt;p&gt;Nonetheless some of the &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; values are still rather high. Remember, these are &lt;strong&gt;instantaneous&lt;/strong&gt; &lt;em&gt;reproductive numbers&lt;/em&gt;, averaged over a sliding 7-day window. Let’s change that to a shorter window to see what the day-to-day changes in &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; are, rather than based on an aggregation of the preceding 7-days. We’ll plot the results using a logarithmic scale with a red reference line at 1.0, representing the &lt;em&gt;reproduction number&lt;/em&gt; below which the outbreak will start to die out.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;t_start &amp;lt;- seq(5, length(hubei_confirmed_cases$local) - 1)
t_end &amp;lt;- t_start + 1

empirical_si_config_daily &amp;lt;- make_config(list(si_parametric_distr = dist, 
    mcmc_control = mcmc_control, seed = overall_seed, n1 = 50, 
    n2 = 50, t_start = t_start, t_end = t_end))

hubei_res_uncertain_si_daily &amp;lt;- estimate_R(hubei_confirmed_cases, 
    method = &amp;quot;si_from_data&amp;quot;, si_data = si_data_wuhan_Li, config = empirical_si_config_daily)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Running 1500 MCMC iterations 
MCMCmetrop1R iteration 1 of 1500 
function value =  -30.27974
theta = 
   1.40008
   0.46471
Metropolis acceptance rate = 0.00000

MCMCmetrop1R iteration 1001 of 1500 
function value =  -31.54334
theta = 
   0.52339
   1.20517
Metropolis acceptance rate = 0.55844



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
The Metropolis acceptance rate was 0.56400
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
Estimating the reproduction number for these serial interval estimates...
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;# plot_Ri(hubei_res_uncertain_si_daily)
plot(hubei_res_uncertain_si_daily, &amp;quot;R&amp;quot;) + scale_y_continuous(trans = &amp;quot;log2&amp;quot;) + 
    geom_hline(yintercept = 1, linetype = &amp;quot;solid&amp;quot;, colour = &amp;quot;red&amp;quot;, 
        size = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_uncertain_si_model_fit_hubei_daily-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;So, it looks like the outbreak has been brought under control in Hubei province, at least based on the published lab-confirmed case numbers and the available serial interval data or estimates of its distribution.&lt;/p&gt;
&lt;p&gt;It might be remarked that the success of the control measures are also obvious simply by looking at the daily incremental incidence numbers for Hubei:&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/hubei_daily_incidence_adj-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;However, there is no clue in the data shown above that daily incidence was beginning to fall until data for &lt;strong&gt;5th February&lt;/strong&gt; became available. But it is clear, from the &lt;strong&gt;instantaneous&lt;/strong&gt; &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; plot above that that the &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; was already falling steadily by &lt;strong&gt;27th January&lt;/strong&gt;, more than a week before the daily incidence plot revealed a peak. Such early indications that their efforts are working are vital for public health authorities and governments, encouraging them to “hold the line” and not abandon such costly and disruptive public health controls prematurely.&lt;/p&gt;
&lt;div id="estimating-changes-in-the-effective-reproduction-number-for-wuhan" class="section level2"&gt;
&lt;h2&gt;Estimating changes in the &lt;em&gt;effective reproduction number&lt;/em&gt; for Wuhan&lt;/h2&gt;
&lt;p&gt;Just to make sure our conclusions about falling &lt;em&gt;effective reproduction numbers&lt;/em&gt; for Hubei province also hold up for just Wuhan, and for other provinces, let’s repeat the estimations. Unfortunately, Wuhan-only data for confirmed cases is not available after 14th February, only combined lab-confirmed and clinical case counts were published after that date.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Running 1500 MCMC iterations 
MCMCmetrop1R iteration 1 of 1500 
function value =  -30.27974
theta = 
   1.40008
   0.46471
Metropolis acceptance rate = 0.00000

MCMCmetrop1R iteration 1001 of 1500 
function value =  -31.54334
theta = 
   0.52339
   1.20517
Metropolis acceptance rate = 0.55844



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
The Metropolis acceptance rate was 0.56400
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
Estimating the reproduction number for these serial interval estimates...
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_model_get_data_wuhan-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; for Wuhan is also trending down, and is, at the time of writing, very likely below 1.0 (if our &lt;em&gt;serial interval&lt;/em&gt; distribution estimates are correct). However, note that the downwards trend in Wuhan is not monotonic. This may be an indication that the authorities are still struggling to control spread in Wuhan. This is also apparent in the jagged plateau in the daily incremental incidence figures for Wuhan as we saw above.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="estimating-changes-in-the-effective-reproduction-number-outside-hubei" class="section level2"&gt;
&lt;h2&gt;Estimating changes in the &lt;em&gt;effective reproduction number&lt;/em&gt; outside Hubei&lt;/h2&gt;
&lt;p&gt;Finally, let’s estimate the change in &lt;span class="math inline"&gt;\(R_{e}\)&lt;/span&gt; for all other Chinese provinces except Hubei.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Running 1500 MCMC iterations 
MCMCmetrop1R iteration 1 of 1500 
function value =  -30.27974
theta = 
   1.40008
   0.46471
Metropolis acceptance rate = 0.00000

MCMCmetrop1R iteration 1001 of 1500 
function value =  -31.54334
theta = 
   0.52339
   1.20517
Metropolis acceptance rate = 0.55844



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
The Metropolis acceptance rate was 0.56400
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 
Estimating the reproduction number for these serial interval estimates...
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/Cori_model_get_data_not_hubei-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;It looks like the outbreak is already under control in other provinces, if the empirical distribution for the &lt;em&gt;serial interval&lt;/em&gt; we have used is approximately correct.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="projections" class="section level1"&gt;
&lt;h1&gt;Projections&lt;/h1&gt;
&lt;p&gt;We saw above how we can make fairly naïve and highly alarming projections based on a simple SIR model. But more sophisticated projections are also possible.&lt;/p&gt;
&lt;p&gt;Here we’ll examine the use of the &lt;a href="https://www.repidemicsconsortium.org/projections/"&gt;&lt;code&gt;projections&lt;/code&gt; package&lt;/a&gt;, which is also part of the &lt;strong&gt;RECON&lt;/strong&gt; suite. From its manual page:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;projections&lt;/code&gt; uses data on daily incidence, the &lt;em&gt;serial interval&lt;/em&gt; (time between onsets of infectors and infectees) and the reproduction number to simulate plausible epidemic trajectories and project future incidence. It relies on a branching process where daily incidence follows a Poisson process determined by a daily infectiousness, computed as:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class="math display"&gt;\[\lambda_t = \sum_{s=1}^{t-1} y_s w(t-s)\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;where &lt;span class="math inline"&gt;\(w()\)&lt;/span&gt; is the probability mass function (PMF) of the serial interval, and &lt;span class="math inline"&gt;\(y_s\)&lt;/span&gt; is the incidence at time &lt;span class="math inline"&gt;\(s\)&lt;/span&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can just re-use the &lt;code&gt;incidence()&lt;/code&gt; object for the Hubei incidence data which we created above for the purposes of fitting log-linear models to the epidemic trajectories. We’ll also use the discrete &lt;em&gt;serial interval&lt;/em&gt; distribution we created, and the median &lt;em&gt;reproduction number&lt;/em&gt; we calculated above for the growth and decay phases of the outbreak in Hubei province, in order to test the projection of those phases of the epidemic in Hubei forwards. We’ll base these projections on only the first parts of the growth and decay phases, so that we can then compare the resulting projections against the observed incidence data for the balance of thoe phases. If the projections match that observed reality reasonably well, we can then have some confidence in any forward projections into the future which we make. Such projections are obviously valuable for planning purposes – for example, during the decay phase of an epidemic, projections of the decay can be used to inform how long public health interventions such as transport lock-downs and mandatory social isolation may have to be kept in place.&lt;/p&gt;
&lt;p&gt;First we’ll project the Hubei province incidence data for the first part of the growth phase of the epidemic. Recall that we found the peak of the epidemic (daily incidence) curve for Hubei to have occured on 04 February 2020. Thus, we’ll base our projection on the Hubei incidence data up to 14 days before that peak, and compare with the observed data. Click on the &lt;code&gt;Code&lt;/code&gt; button to see the details.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;set.seed(1)
pred_fwd_days &amp;lt;- 10
date_range &amp;lt;- 1:(which(get_dates(hubei_incidence_object) == hubei_incidence_peak) - 
    pred_fwd_days)

test_pred_growth &amp;lt;- project(hubei_incidence_object[date_range], 
    R = median(growth_R0), si = w, n_days = pred_fwd_days, n_sim = 1000)

# convert the test_pred_growth matrix to a data frame and get
# the median incidence for all the simulations for each date
test_pred_growth_median_counts &amp;lt;- test_pred_growth %&amp;gt;% as.data.frame() %&amp;gt;% 
    pivot_longer(-dates, names_to = &amp;quot;simulation&amp;quot;, values_to = &amp;quot;incidence&amp;quot;) %&amp;gt;% 
    group_by(dates) %&amp;gt;% summarise(incident_cases = as.integer(median(incidence))) %&amp;gt;% 
    mutate(data_type = &amp;quot;projection&amp;quot;)

test_pred_growth_median_counts %&amp;gt;% bind_rows(tibble(dates = get_dates(hubei_incidence_object), 
    incident_cases = get_counts(hubei_incidence_object), data_type = &amp;quot;observed&amp;quot;)) %&amp;gt;% 
    ggplot(aes(x = dates, y = incident_cases, colour = data_type)) + 
    geom_point() + geom_line() + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Daily incident confirmed cases&amp;quot;, 
    title = &amp;quot;Observed versus growth-phase projection of incident cases\nin Hubei province&amp;quot;, 
    subtitle = paste(&amp;quot;(projection based on observed case counts up to&amp;quot;, 
        format(hubei_incidence_peak - days(pred_fwd_days), &amp;quot;%d %B %Y&amp;quot;), 
        &amp;quot;)&amp;quot;)) + theme(legend.position = &amp;quot;top&amp;quot;, legend.title = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/test_projection_Hubei_growth-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;OK, that’s impressive! The projection, based only on observed data up to 25 January 2020, is in remarkably close agreement with the observed data. Let’s do the same for the decay phase, this time holding out 5 days of the observed decay from our prediction.&lt;/p&gt;
&lt;p&gt;&lt;img src="file2a6e463ab9ee_files/figure-html/test_projection_Hubei_decay-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Based on that projection, it will take until the beginning of April for the outbreak in Hubei to be extinguished. But perhaps that is too conservative a prediction? We’ll re-visit these predictions in a later post, in the light of further incidence data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="conclusions" class="section level1"&gt;
&lt;h1&gt;Conclusions&lt;/h1&gt;
&lt;div id="public-health-considerations" class="section level2"&gt;
&lt;h2&gt;Public health considerations&lt;/h2&gt;
&lt;p&gt;It seems likely that China has won the battle, if not the war, against the COVID-19 outbreak, having successfully mitigated the spread of the virus through &lt;strong&gt;very&lt;/strong&gt; decisive and prompt public health action, in particular closing Wuhan and other cities in Hubei province, and implementing strict social isolation policies within those cities.&lt;/p&gt;
&lt;p&gt;Just how long these measures will need to remain in place depends is unclear, but could be estimated using methods similar to those described above.&lt;/p&gt;
&lt;p&gt;The real worry now is spread in other countries. Wealthy, developed countries such as Australia should be able to detect and contain, with potentially Herculean effort, any spread, or at least slow it enough to allow their health care systems to cope. The real worry are less wealthy countries which have considerable interchange of people with mainland China, and which have much poorer public health surveillance and control capabilities. Indonesia is a particular worry, and the &lt;a href="https://www.smh.com.au/world/asia/why-are-there-are-no-cases-of-coronavirus-in-indonesia-20200213-p540o1.html"&gt;absence of any reported cases there currently&lt;/a&gt;, as at 14th February, beggars belief. &lt;a href="https://www.medrxiv.org/content/10.1101/2020.02.04.20020495v1.full.pdf"&gt;De Salazar &lt;em&gt;et al&lt;/em&gt;.&lt;/a&gt; at the Harvard Centre for Communicable Disease Dynamics has statistically modelled this beggaring of belief. However, all the other south-east Asian countries would also seem to be highly vulnerable, even if they have reported cases, and &lt;a href="https://www.smh.com.au/world/asia/coronavirus-could-infect-two-thirds-of-globe-top-scientist-says-20200214-p540pc.html"&gt;some experts are predicting a global pandemic&lt;/a&gt; with devastating consequences.&lt;/p&gt;
&lt;p&gt;It would seem that a key question, right now (as at 18th February), is &lt;strong&gt;“How long do we need to wait to know whether there really aren’t any COVID-19 cases in Indonesia?”&lt;/strong&gt;. In other words, by what date should spreading COVID-19 infection in Indonesia become evident, even in the absence of comprehensive or effect public health surveillance systems there (or in the presence of possible government censoring, or &lt;a href="https://www.thejakartapost.com/news/2020/02/12/its-insulting-indonesia-criticizes-us-study-concerns-over-no-coronavirus-cases.html"&gt;censuring&lt;/a&gt;, of information produced by public health surveillance agencies).&lt;/p&gt;
&lt;p&gt;We can make some informed guesses about that. Let’s assume that, in a country with relatively poor public health surveillance capabilities, it requires about 1,000 cases of the disease before an outbreak becomes very evident, given that only a small proportion of those cases require hospital care and only a few per cent will die. One thousand cases is about 2&lt;sup&gt;10&lt;/sup&gt;, so 10 generations, and with a doubling time of about 2.8 days, as we estimated above, that means local outbreaks ought to start showing up after about 4 weeks. If the true doubling time is longer than that, it make take six or eight weeks before local outbreaks become obvious. Given this, we might expect such local outbreaks to start showing up in Indonesia some time over the next few weeks, at least by the end of February 2020. At the time of writing, &lt;a href="https://asia.nikkei.com/Spotlight/Coronavirus/Vietnam-locks-down-Son-Loi-district-near-Hanoi-for-20-days"&gt;Vietnamese authorities have already locked down the Son Loi community&lt;/a&gt; outside Hanoi due to a local COVID-19 outbreak.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="data-science-considerations" class="section level2"&gt;
&lt;h2&gt;Data science considerations&lt;/h2&gt;
&lt;p&gt;From a data science (and public health) perspective, the main thing to note is that by doing all this data manipulation and model estimation using program code, as we have been doing, rather than using spreadsheets or some other manual process, it is very easy to re-run everything on-demand in just a minute or so, and thus current estimates and projections can readily be automatically updated as new observed data becomes available each day, or even every hour.&lt;/p&gt;
&lt;p&gt;The absence of better &lt;em&gt;serial interval&lt;/em&gt; data is unfortunate. These data can be sampled – it isn’t necessary to collect these data for everycase, just a representative sample of them. Only Li &lt;em&gt;et al.&lt;/em&gt; have published such vital data, to date, and only for five sets of cases from early in the outbreak. This seems to be a significant omission, given the considerable &lt;a href="https://arstechnica.com/science/2020/02/quarantine-camps-door-to-door-searches-in-wuhan-as-coronavirus-rampages-on/"&gt;human&lt;/a&gt; and &lt;a href="https://www.bloomberg.com/graphics/2020-global-economic-impact-of-wuhan-novel-coronavirus/"&gt;economic&lt;/a&gt; impacts of the outbreak and the containment measures implemented in response to it.&lt;/p&gt;
&lt;p&gt;Similarly better line-listing data, even if only for samples of cases, would facilitate modelling of outbreak control and estimation of how long public health controls need to be kept in place in each jurisdiction. One would like to think that government authorities are undertaking mathematical modelling, of the type illustrated in this document, on a daily basis to inform their policy decisions. They may well be in China, but elsewhere, it is likely that it is heuristics, not mathematics, that is informing policy.&lt;/p&gt;
&lt;p&gt;Finally, it would be wonderful if WHO could provide up-to-date, authoritative summary data via a stable API, to facilitate efforts to track and model such outbreaks. National and sub-national jurisdictional health authorities should do the same. There are data scientists who can assist!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="footnotes"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn1"&gt;&lt;p&gt;I have updated the NSW Health data shown in this post since it was written and originally published. But the data for China still only covers the period up to 15th February.&lt;a href="#fnref1" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn2"&gt;&lt;p&gt;From 1st February 2020, Australia banned entry of anyone travelling from or through mainland China, with the exception of returning Australian citizens and permanent residents. Some exceptions were made for a small number of secondary students. At the time of writing, the travel restrictions are still in place.&lt;a href="#fnref2" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn3"&gt;&lt;p&gt;The &lt;a href="https://cbdrh.github.io/NovelCoronavirus/on-COVID-19.html"&gt;full version of this analysis&lt;/a&gt; uses the excellent &lt;code&gt;gt&lt;/code&gt; library to display such tables for those who are interested.&lt;a href="#fnref3" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn4"&gt;&lt;p&gt;It is also possible to fit SIR and related models by MLE.&lt;a href="#fnref4" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn5"&gt;&lt;p&gt;In a very interesting paper, &lt;a href="https://doi.org/10.3390/jcm9020419"&gt;Nishiura &lt;em&gt;et al&lt;/em&gt;.&lt;/a&gt; state: “&lt;em&gt;There were two interesting features of the evacuation process conducted by Japanese authorities. First, all 565 passengers [repatriated to Japan from Wuhan] were screened for symptoms upon arrival. Prior to disembarkation, the quarantine officers used portable thermoscanners to screen the temperature. In the following, all passengers were interviewed regarding whether they have any symptoms suggestive of upper respiratory tract infection, including fever and cough. Of the 565 passengers, 63 were symptomatic. Second, the passengers were tested for presence of 2019‐nCoV using reverse transcription polymerase chain reaction (RT‐PCR), and eight passengers (1.4%) were determined to have the virus. Importantly, most of the individuals positive for the virus were asymptomatic (five passengers), while only the other three had symptoms consistent with 2019‐nCoV infection, indicating that the dataset generated from this process can help investigate the full spectrum of infection including mild and asymptomatic infections.&lt;/em&gt;”. Thus, they found about 60% of those infected with the COVID-19 virus were essentially asymptomatic, and thus likely to be undetected and unascertained.&lt;a href="#fnref5" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id="fn6"&gt;&lt;p&gt;They are also consistent with unpublished estimates of &lt;span class="math inline"&gt;\(R_{0}\)&lt;/span&gt; for the COVID-19 virus being discussed in various expert WHO fora, or so I am told by a reliable source who does not wish to be named.&lt;a href="#fnref6" class="footnote-back"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;




&lt;/div&gt;

&lt;script&gt;

// add bootstrap table styles to pandoc tables
function bootstrapStylePandocTables() {
  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');
}
$(document).ready(function () {
  bootstrapStylePandocTables();
});


&lt;/script&gt;

&lt;!-- tabsets --&gt;

&lt;script&gt;
$(document).ready(function () {
  window.buildTabsets("TOC");
});

$(document).ready(function () {
  $('.tabset-dropdown &gt; .nav-tabs &gt; li').click(function () {
    $(this).parent().toggleClass('nav-tabs-open')
  });
});
&lt;/script&gt;

&lt;!-- code folding --&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
&lt;/script&gt;

</description>
      <distill:md5 xmlns:distill="https://distill.pub/journal/">aab24779f3ddf040beddf039141e6730</distill:md5>
      <category>R</category>
      <category>COVID-19</category>
      <guid>https://timchurches.github.io/blog/posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1</guid>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://timchurches.github.io/blog/posts/2020-02-18-analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1/analysing-covid-19-2019-ncov-outbreak-data-with-r-part-1_files/figure-html5/fit_incidence_object-1.png" medium="image" type="image/png" width="1248" height="768"/>
    </item>
  </channel>
</rss>
